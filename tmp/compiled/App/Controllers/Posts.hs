module App.Controllers.Posts where 

import Config.Master
import Turbinado.Controller

--import App.Models.Posts as PostModel
import App.Models.Posts
import qualified Network.URI as URI
import Data.Maybe


new :: Controller ()
new =  do setViewDataValue "save-url" ("Create")          


 --The post is inserted in the db through the modified "insert" method in App.Models.Posts , I had to do this basically because the autogenerated "insert" method in App.Model.Bases take as parameter (_id,body,title) but we don't know the Post's id until it is saved in the db (autoincrement field). Parametres : Post, Bool  ; The Bool indicates if we want the new post id or not.more here:App/Models/Base/Common.hs         

create :: Controller ()
create = do body_    <- getParam_u "content"
            title_   <- getParam_u "title"
            id'      <- insert Posts {_id=Nothing , body = body_ , title = title_ } True 
            redirectTo $ "/Posts/Show/" ++ Prelude.show(fromJust(id')) 

show :: Controller ()
show =  do id' <- getSetting_u "id" :: Controller String
           p <- find (read id' :: Int64) :: Controller Posts
           setViewDataValue "post-title" (title p)
           setViewDataValue "post-content" (body p)
           
index :: Controller ()
index = do posts <- findAll :: Controller [Posts]           
           return ()   -- SPLIT HERE



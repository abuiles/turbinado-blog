/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package Crypto-4.2.0 */
#define MIN_VERSION_Crypto(major1,major2,minor) \
  (major1) <  4 || \
  (major1) == 4 && (major2) <  2 || \
  (major1) == 4 && (major2) == 2 && (minor) <= 0

/* package HDBC-2.1.0 */
#define MIN_VERSION_HDBC(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 0

/* package HDBC-postgresql-2.1.0.0 */
#define MIN_VERSION_HDBC_postgresql(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 0

/* package HTTP-3001.1.5 */
#define MIN_VERSION_HTTP(major1,major2,minor) \
  (major1) <  3001 || \
  (major1) == 3001 && (major2) <  1 || \
  (major1) == 3001 && (major2) == 1 && (minor) <= 5

/* package base-4.0.0.0 */
#define MIN_VERSION_base(major1,major2,minor) \
  (major1) <  4 || \
  (major1) == 4 && (major2) <  0 || \
  (major1) == 4 && (major2) == 0 && (minor) <= 0

/* package containers-0.2.0.0 */
#define MIN_VERSION_containers(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0

/* package dataenc-0.12 */
#define MIN_VERSION_dataenc(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 0

/* package directory-1.0.0.2 */
#define MIN_VERSION_directory(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 0

/* package filepath-1.1.0.1 */
#define MIN_VERSION_filepath(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0

/* package harp-0.4 */
#define MIN_VERSION_harp(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 0

/* package haskell-src-exts-0.4.8 */
#define MIN_VERSION_haskell_src_exts(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 8

/* package hslogger-1.0.7 */
#define MIN_VERSION_hslogger(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 7

/* package hsx-0.4.8 */
#define MIN_VERSION_hsx(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 8

/* package mtl-1.1.0.2 */
#define MIN_VERSION_mtl(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0

/* package network-2.2.0.1 */
#define MIN_VERSION_network(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 0

/* package old-locale-1.0.0.1 */
#define MIN_VERSION_old_locale(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 0

/* package old-time-1.0.0.1 */
#define MIN_VERSION_old_time(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 0

/* package parsec-2.1.0.1 */
#define MIN_VERSION_parsec(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 0

/* package plugins-1.4.0 */
#define MIN_VERSION_plugins(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 0

/* package pretty-1.0.1.0 */
#define MIN_VERSION_pretty(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 1

/* package regex-compat-0.92 */
#define MIN_VERSION_regex_compat(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  92 || \
  (major1) == 0 && (major2) == 92 && (minor) <= 0

/* package time-1.1.2.3 */
#define MIN_VERSION_time(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 2

